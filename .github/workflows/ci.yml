name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  lint:
    runs-on: ubuntu-latest
    container: "koalaman/shellcheck-alpine:latest"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Run Shellcheck
        # TODO(#35): fix bogus shellcheck errors in Github Actions
        run: |
          find . -type f -name '*.sh' | xargs shellcheck --external-sources --exclude=SC1091,SC2086

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        distro: [alpine, arch]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Generate image tags
        id: generate_image_tags
        run: |
          IMAGE_TAG_BASE="meatwallace/meatbox-${{ matrix.distro }}"

          if [[ "${{ github.ref}}" = refs/heads/master ]]; then
            TAGS="${IMAGE_TAG_BASE}:latest,"
          fi

          TAGS="$TAGS${IMAGE_TAG_BASE}:${{ github.sha }}"

          echo "::set-output name=tags::${TAGS}"

      - name: Log in to Dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build container image
        uses: docker/build-push-action@v2
        with:
          push: ${{ github.event_name != 'pull_request' }}
          file: ./scripts/${{ matrix.distro }}/Dockerfile
          build-args: |
            MEATBOX_USER: meatwallace
            MEATBOX_PASSWORD: meatword
            MEATBOX_CHECKOUT_SHA1: ${{ github.sha }}
          tags: ${{ steps.generate_image_tags.outputs.tags }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
