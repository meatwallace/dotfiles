#!/usr/bin/env zsh

###############################################################################
# w(hats)app, a thin wrapper for `yowsup-cli`
#
# NOTE: incomplete - as WhatsApp prevents authorizing a phone number to more
# than one device at a time, `yowsup` is unable to support CLI access in tandem
# with mobile access. the only way to achieve this at this point in time would
# be to emulate web.whatsapp.com, or presumably more simply, interface with it
# directly. after considering the complexity and the option to just use the web
# client, i've shelved this for now.
# for the future:
# - https://github.com/mukulhase/WebWhatsapp-Wrapper
###

set -euo pipefail

# configuration
declare phone_number="$WAPP_PHONE_NUMBER"
declare country_code="$WAPP_COUNTRY_CODE"
declare mobile_country_code="$WAPP_MOBILE_COUNTRY_CODE"
declare mobile_network_code="$WAPP_MOBILE_NETWORK_CODE"
declare using_android="${WAPP_USING_ANDROID:-false}"

# grab the command the user passed and store any remaining arguments as options
declare args=($@)
declare cmd="${args[1]:-}"
declare opts=(${args:1})

# append thhe android environment flag if enabled
if is equal "$using_android" "true"; then
  opts+=("--env" "android")
fi

# set all of our key configuration variables
opts+=(
  "--config-phone" "$phone_number"
  "--config-cc" "$country_code"
  "--config-mcc" "$mobile_country_code"
  "--config-mnc" "$mobile_network_code"
)

case "$cmd" in
request-auth-code)
  cmd="registration"

  # grab the first arg out of our options and use it for our request source.
  # if not provided, use `sms` as a fallback.
  source="${opts[1]:-"sms"}"

  # rewrite our opts to include our requested code's source and remove the
  # now-processed option stored in $source from $opts
  opts=("--requestcode" "$source" "${opts:1}")
  ;;
register-auth-code)
  cmd="registration"

  if is empty "$opts[1]"; then
    printf "%s" "error: no authentication code provided"
  fi

  opts=("--register" "$opts")
  ;;
  # sync-contacts) ;;
send)
  cmd="demos"

  # TODO: we can make this more robust
  if is empty "$opts[2]"; then
    printf "%s" "error: must pass a phone and a message parameter"

    exit 1
  fi

  opts=("--send" "$opts")
  ;;
demos)
  cmd="demos"
  ;;
*)
  printf "%s" "
w(hats)app, a thin wrapper for \`yowsup-cli\`

commands:
  request-auth-code <sms|voice>     request an auth code to be SMSed or sent to
                                    you via phone call to enable authentication
                                    onthe WhatsApp platform.
                                    if no option is passed, "sms" will be used
                                    by default.

  register-auth-code 012345         authenticate with the code received from
                                    WhatsApp's authentication service.
                                    the code provided should not include any
                                    seperator characters, aka the dash.

  sync-contacts                     TODO

  send                              TODO

  demos                             TODO
"
  ;;
esac

# if we've set our command, then fire it up, otherwise just exit gracefully
if is not empty "$cmd"; then
  yowsup-cli "$cmd" "$opts"
fi
